#!/usr/bin/env bash
set -x
set -e
# OctoPI generation script
# Helper script that runs in a Raspbian chroot to create the OctoPI distro
# Written by Guy Sheffer <guysoft at gmail dot com>
# GPL V3

source /common.sh

unpack /filesystem/home/pi /home/pi pi
unpack /filesystem/home/root /root root
unpack /filesystem/boot /boot
unpack /filesystem/root_init /

apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 5B393194

apt-get update

apt-get remove -y --purge scratch squeak-plugins-scratch squeak-vm wolfram-engine python-minecraftpi minecraft-pi sonic-pi oracle-java8-jdk bluej greenfoot libreoffice-common libreoffice-core freepats
apt-get autoremove -y

#apt-get tools
apt-get -y --force-yes install python2.7 git screen checkinstall avahi-daemon libavahi-compat-libdnssd1 xterm

if [ "$FULLPAGEOS_INCLUDE_CHROMIUM" == "yes" ]
then
    apt-get install -y --force-yes chromium-browser
    sudo -u pi sed -i 's@%BROWSER_START_SCRIPT%@/home/pi/scripts/start_chromium_browser@g' /home/pi/scripts/run_onepageos
fi

apt-get install -y --force-yes xdotool matchbox-window-manager xorg lightdm
if [ "$FULLPAGEOS_INCLUDE_XVNC" == "yes" ]
then
apt-get install -y --force-yes vim x11vnc expect
fi

#Install web stack
if [ "$FULLPAGEOS_INCLUDE_LIGHTTPD" == "yes" ]
then
    apt-get install -y lighttpd php5-common php5-cgi php5
    lighty-enable-mod fastcgi-php
    #service lighttpd force-reload
    chown -R www-data:www-data /var/www/html
    chmod 775 /var/www/html
    usermod -a -G www-data pi
    systemctl enable clear_lighttpd_cache.service
    pushd /var/www/html
        #Put git clones in place
        if [ "$FULLPAGEOS_INCLUDE_DASHBOARD" == "yes" ]
        then
        gitclone FULLPAGEOS_DASHBOARD_REPO FullPageDashboard
            chown -R pi:pi FullPageDashboard
            chown -R www-data:www-data FullPageDashboard
            chmod 775 FullPageDashboard
            pushd FullPageDashboard
                sed -i "s@'INIT_URL_PATH', __DIR__ . '/init.txt'@'INIT_URL_PATH', '/boot/fullpagedashboard.txt'@g" config.php
            popd
        fi
        #Set Welcome screen
        if [ "$FULLPAGEOS_INCLUDE_WELCOME" == "yes" ]
        then        
            gitclone FULLPAGEOS_WELCOME_REPO welcome
            chown -R www-data:www-data welcome
        fi
    popd
    echo "enabled" > /boot/check_for_httpd
else
    echo "disabled" > /boot/check_for_httpd
fi

#override timezone
if [ "$FULLPAGEOS_OVERRIDE_TIMEZONE" ]
then
	echo "$FULLPAGEOS_OVERRIDE_TIMEZONE" > /etc/timezone
fi

#override password
if [ "$FULLPAGEOS_OVERRIDE_PASSWORD" ]
then
	echo "pi:$FULLPAGEOS_OVERRIDE_PASSWORD" | chpasswd
fi

#override locale
if [ "$FULLPAGEOS_OVERRIDE_LOCALE" ]
then
	sed -i '/^#.* '"$FULLPAGEOS_OVERRIDE_LOCALE"' /s/^# //' /etc/locale.gen
	locale-gen
	update-locale LANG="$FULLPAGEOS_OVERRIDE_LOCALE"
fi

#reach pi by name
echo "$FULLPAGEOS_OVERRIDE_HOSTNAME" > /etc/hostname
sed -i -e "s@raspberrypi@$FULLPAGEOS_OVERRIDE_HOSTNAME@g" /etc/hosts

#make sure users don't run git with sudo, thus breaking permissions, by adding /root/bin to the
#default sudo path and placing a git wrapper script there that checks if it's run as root
sed -i "s@secure_path=\"@secure_path=\"/root/bin:@g" /etc/sudoers
chmod +x /root/bin/git

# enable raspicam
echo "# enable raspicam" >> /boot/config.txt
echo "start_x=1" >> /boot/config.txt
echo "gpu_mem=128" >> /boot/config.txt

# allow network configuration via /boot/fullpageos-network.txt
sed -i "s@iface wlan0 @iface wlan0-raspbian @g" /etc/network/interfaces
sed -i "s@iface wlan1 @iface wlan1-raspbian @g" /etc/network/interfaces
echo "mapping wlan0" >> /etc/network/interfaces
echo "  script /root/bin/map_iface" >> /etc/network/interfaces
echo "mapping wlan1" >> /etc/network/interfaces
echo "  script /root/bin/map_iface" >> /etc/network/interfaces
echo "source /boot/fullpageos-network.txt" >> /etc/network/interfaces

#unpack root in the end, so etc file are not overwritten, use root_init to unpack stuff that comes before
unpack /filesystem/root /


#set up gui service
sed -i 's/#user-session=.*/user-session=fullpageos/g' /etc/lightdm/lightdm.conf
sed -i 's/#autologin-user=.*/autologin-user=pi/g' /etc/lightdm/lightdm.conf

# Set up x11vnc
if [ "$FULLPAGEOS_INCLUDE_XVNC" == "yes" ]
then
  sudo -u pi /home/pi/scripts/setX11vncPass raspberry
  if [ ! -f /home/pi/.vnc/passwd ]; then
    echo "/home/pi/.vnc/passwd was not created"
    sudo -u pi /home/pi/scripts/setX11vncPass raspberry
    if [ ! -f /home/pi/.vnc/passwd ]; then
      echo "/home/pi/.vnc/passwd was not created again. Giving up."
      echo "Failed to set a VNC password. Aborting build."
      exit 1
    fi
  fi
fi

#echo "sudo -u pi startx /home/pi/scripts/run_onepageos &" >> /etc/rc.local
#echo "(sleep 15 ; sudo -u pi /home/pi/scripts/fullscreen) &" >> /etc/rc.local
echo "exit 0" >> /etc/rc.local

#####################################################################
### setup services

echo "server time.nist.gov" >> /etc/ntp.conf
echo "server ntp.ubuntu.com" >> /etc/ntp.conf

#cleanup
apt-get clean
apt-get autoremove -y
